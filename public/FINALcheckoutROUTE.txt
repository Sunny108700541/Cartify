router.post("/checkout", userIsLoggedIn, async (req, res) => {
  try {
    const { name, phone, state, city, zip } = req.body;
    const userId = req.session.passport?.user;

    if (!userId) return res.status(401).send("❌ ERROR: ID not found");

    const user = await userModel.findById(userId);
    if (!user) return res.status(404).send("❌ ERROR: User not found");

    const cart = await cartModel.findOne({ user: userId }).populate("products");

    if (!cart || !cart.products.length) {
      return res.status(400).json({ error: "No products to order" });
    }

    const orderProducts = cart.products.map(product => ({
      product: product._id,
      name: product.name,
      price: product.price,
      quantity: product.quantity || 1,
    }));

    const totalPrice = orderProducts.reduce((sum, item) => sum + item.price * item.quantity, 0);
    
    const gstRate = 0.18;
    const gstCharge = totalPrice * gstRate;
    const deliveryCharge = totalPrice >= 500 ? 0 : 50;

    const order = new orderModel({
      user: userId,
      products: orderProducts,
      totalAmount: totalPrice,
      gstCharge,
      deliveryCharge,
      address: { state, city, zip },
    });

    await order.save();

    cart.products = [];
    cart.totalPrice = 0;
    await cart.save();

    res.status(201).json({ message: "Order placed successfully", order });

  } catch (error) {
    console.error("❌ ERROR: Checkout failed:", error);
    res.status(500).send("❌ ERROR: Processing checkout failed");
  }
});
